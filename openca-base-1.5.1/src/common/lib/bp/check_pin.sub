## OpenCA - batch function
## Written by Michael Bell for the OpenCA project
## (c) Copyright 1998-2004 The OpenCA Project
##
##   File Name: check_pin.sub
##     Version: $Revision: 1.1.1.1 $
##       Brief: check a new pin
## Description: 

use strict;

sub workflow_check_pin
{
    ## general global stuff
    our $state_machine;
    our ($tools, $xml_cache, $cryptoShell, $bp_token);

    ## global logging system
    our $log;
    my $journal = undef;

    my $keys     = { @_ };
    my $user     = $keys->{USER};
    my $workflow = $keys->{WORKFLOW};
    my $home = $state_machine->get_workflow_path($user, $workflow);

    ## initialize new log message
    $journal->{CLASS}    = "batch_system";
    $journal->{LEVEL}    = "info";
    $journal->{message}  = "";
    $journal->{function} = "create_pin";
    $journal->{user}     = $user;
    $journal->{workflow} = $workflow;

    ## the token of the batch system must be activated

    if (not $bp_token or not $bp_token->keyOnline)
    {
        my $msg = gettext ("The crypto token of the batch system was not activated.");
        $journal->{message} .= $msg;
        $log->addMessage (OpenCA::Log::Message->new (HASHREF => $journal));
        return [ -105, $msg ];
    }

    ## is there already a pin ?

    if (not -f $home."/private/purePIN")
    {
        my $msg = gettext ("There is no checkable PIN.");
        $journal->{message} .= $msg;
        $log->addMessage (OpenCA::Log::Message->new (HASHREF => $journal));
        return [ -120, $msg ];
    }

    ## load PIN

    if (not -f $home."/private/purePIN")
    {
        my $msg = gettext ("There is no PIN file which could be used to check the PIN.");
        $journal->{message} .= $msg;
        $log->addMessage (OpenCA::Log::Message->new (HASHREF => $journal));
        return [ -130, $msg ];
    }
    my $pin = $bp_token->decrypt (
                  INFILE     => $home."/private/purePIN",
                                  );
    if (not $pin) {
        my $msg = gettext ("The PIN file cannot be decrypted.");
        $journal->{message} .= $msg;
        $log->addMessage (OpenCA::Log::Message->new (HASHREF => $journal));
        return [ -140, $msg ];
    }

    ## check PIN

    ## actually we only do some not configurable length checking
    ## 128 Bit ==> BASE64 encoding ==> 4x128/3 ==> 171 Bit ==> 22 Zeichen

    if (length ($pin) < 22) {
        my $msg = gettext ("The checked PIN is too short.");
        $journal->{message} .= $msg;
        $log->addMessage (OpenCA::Log::Message->new (HASHREF => $journal));
        return [ -140, $msg ];
    }

    $journal->{message} .= gettext ("PIN checked and accepted.");

    ## set the new state

    if (not $state_machine->set_user_states (
                                "USER"    => $user,
                                "PROCESS" => $workflow,
                                "SET"     => [ "checked_pin" ],
                                "UNSET"   => [ "error_pin_check", "new_pin" ]))
    {
        my $msg = i18nGettext ( 
                      "Cannot set new state configuration (__ERRNO__).",
                      "__ERRNO__", $state_machine->errno).
                  $state_machine->errval;
        $journal->{message} .= $msg;
        $log->addMessage (OpenCA::Log::Message->new (HASHREF => $journal));
        return [ -190, $msg ];
    }
    $journal->{message} .= gettext ("State configuration was changed.");

    ## log the complete stuff
    $log->addMessage (OpenCA::Log::Message->new (HASHREF => $journal));

    ## finished
    return [ 0, gettext ("PIN checked and accepted.") ];
}

1;
